/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_italian.h"

// Layer definitions
    #define BASE 0
    #define SYM 1
    #define EXT 2
    #define FNC 3
    #define SYM2 4
    #define ACCENT 5
		#define SETTINGS 6
// -----------------

&mt {
   //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

&sk {
    ignore-modifiers;
};

/ {
		macros {
				// sometimes my device thinks a modifier is being held down
				// pressing all modifiers fixes it.
				unstick: unstick {
					label = "ZM_unstick";
					compatible = "zmk,behavior-macro";
					#binding-cells = <0>;
					bindings
						= <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
				};
		};

    combos {
        compatible = "zmk,combos";
				// both right thumb keys
        combo_accent {
            timeout-ms = <300>;
            key-positions = <39 40>;
            bindings = <&mo ACCENT>;
        };
				// internal-left & external-right thumb keys
				combo_sym2 {
						timeout-ms = <200>;
						key-positions = <38 40>;
						bindings = <&mo SYM2>;
				};
				// both left thumb keys
				combo_settings {
						timeout-ms = <300>;
						key-positions = <37 38>;
						bindings = <&mo SETTINGS>;
				};
    };

    keymap {
            compatible = "zmk,keymap";

        // Base alpha layer
       		default_layer {
		bindings = <
		&none &kp Q &kp W &kp E &kp R &kp T           &kp Y &kp U  &kp I     &kp O   &kp P &none
		&none &kp A &kp S &kp D &kp F &kp G           &kp H &kp J  &kp K     &kp L &kp SINGLE_QUOTE &none
		&none &kp Z &kp X &kp C &kp V &kp B           &kp N &kp M  &kp COMMA &kp DOT &kp SLASH &none
             &none &mo EXT &mt LSHIFT SPACE           &kp SPACE &sl SYM &none
		>;
		};

        // Numbers and high frequency symbols
       		sym_layer {
		bindings = <
		&none &kp N1 &kp N2 &kp N3 &kp N4 &kp N5		                                    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &none
		&none &kp LESS_THAN  &kp PERCENT   &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp LEFT_BRACKET      &kp EQUAL     &kp QUESTION           &kp STAR   &kp PLUS  &kp BACKSLASH &none
		&none &kp GREATER_THAN   &kp DOLLAR  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET    &kp AT_SIGN  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp MINUS      &kp SLASH &none
					                                      &none &mo FNC  &mo SYM2      &trans &trans &none
		>;
		};

        // Main modifiers and arrow keys
		    ext_layer {
		bindings = <
		&none &kp ESC  &trans &trans  &kp LS(LG(Z)) &trans      			     &kp HOME &kp PG_DN &kp PG_UP &kp END &kp CAPS &none
		&none &sk LGUI &sk LALT &sk LCTRL &sk LSHIFT &none 			&kp LEFT &kp DOWN &kp UP &kp RIGHT   &kp DEL &none
		&none &kp LG(Z)  &kp LG(X) &kp LG(C) &kp TAB   &kp LG(V)          &kp LC(BSPC) &kp BSPC &trans &trans  &trans &none
					                       &none &trans &kp LCTRL   &kp ENTER  &mo FNC &none
		>;
		};

        // Function keys with modifiers
       		fnc_layer {
		bindings = <
		&none &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &none
		&none &sk LGUI &sk LALT &sk LCTRL &sk LSHIFT &none     &kp F11 &kp F12  &kp PRINTSCREEN &trans &trans &none
		&none &trans &none &none &none &none				          &none &none &none &none &none &none
          				          &none &none &none            &none  &none &none
		>;
		};

        // Low frequency symbols.
       		symbols_2_layer {
		bindings = <
		&none &none &none &none &none &none                         &none &none &none &none &none &none
		&none &none &none &none &none &none                 &kp LC(LA(LG(SLASH))) &kp LC(LA(LG(COMMA))) &kp LC(LA(LG(DOT))) &none &none &none &none &none &none &none &none &none                         &none &none &none &none &none &none &none &none &none                        &none &none &none
		>;
		};

        // Used to type regional accents.
       		accent_layer {
		bindings = <
		&none &none &none &kp LC(LA(LG(DOT))) &none &none                         &none &none &none &none &none &none
		&none &none &none &kp LC(LA(LG(COMMA))) &none &kp LC(LA(LG(SLASH)))                 &none &none &none &none &none &none
		&none &none &none &none &none &none                         &none &none &none &none &none &none
          				      &none &none &none                        &none &none &none
		>;
		};

        // Used to change the keyboard's settings.
       		settings_layer {
		bindings = <
		&none &bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader &none
		&none &none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none &none
		&none &none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none &none
          				      &none &none &none                         &none &none &none
		>;
		};

	};
};
